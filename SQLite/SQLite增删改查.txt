Java对SQLite的"增删改查"

windows系统，开发工具：
1、Java 传送门：http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
2、eclipse 传送门：http://www.eclipse.org/downloads/
3、sqlite-jdbc-3.8.11.2.jar 传送门：https://bitbucket.org/xerial/sqlite-jdbc/downloads
4、SQLite Expert Personal 4.x 传送门：http://www.sqliteexpert.com/download.html

首先，新建一个Java Project，我把它叫做SQLite。
好，工程新建完毕，我们右键工程，选择最后一项Properties。Java Build Path--Libraries--Add External JARs...
将sqlite-jdbc-3.8.11.2.jar添加到工程中。

1.第一步要打开数据库，创建一个表格：

-------------------------------------------------------

package SQLite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

public class SQLite {

	public static void main(String[] args) {
		Connection c = null;
		Statement stmt = null;
		try {
			Class.forName("org.sqlite.JDBC");
			c = DriverManager.getConnection("jdbc:sqlite:test.db");
			System.out.println("Opened database successfully.");
			stmt = c.createStatement();
			String sql = "CREATE TABLE ichamption " +
						 "(ID INTEGER PRIMARY KEY   AUTOINCREMENT," +
						 "NAME            TEXT     NOT NULL," +
						 "AGE             INT      NOT NULL)";
			stmt.executeUpdate(sql);
			stmt.close();
			c.close();
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ":" +e.getMessage());
			System.exit(0);
		}
		System.out.println("Table created successfully.");
	}
}

---------------------------------------------------------

我们可以看到，这里新建了一个名为test的数据库，里面有一张名为ichampion的表格，表格有ID、NAME、AGE三个字段。
ID跟后面两个不同，不是NOT NULL，而是AUTOINCREMENT，AUTOINCREMENT是什么意思呢？这个问题我们之后再说。
这里的问题主要是，如果工程文件夹下面已经有test.db或者已经有了ichampion这个表格了，程序就会抛出异常。
这里我们可以用“IF NOT EXISTS”和“IF EXISTS”来判断表格是不是存在，而后决定这条语句是否被执行。

2.接下来就是插入数据了

----------------------------------------------------------------

package SQLite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

public class Insert {

	public static void main(String[] args) {
		Connection c = null;
		Statement stmt = null;
		try {
			Class.forName("org.sqlite.JDBC");
			c = DriverManager.getConnection("jdbc:sqlite:Test.db");
			c.setAutoCommit(false);//
			System.out.println("Opened database successfully.");
			stmt = c.createStatement();
			String sql = "INSERT INTO ichamption (ID, NAME, AGE)" + 
						 "VALUES (null,'Zhang san',8);";//字符串单引号
			stmt.executeUpdate(sql);
			sql = "INSERT INTO ichamption (ID, NAME, AGE) " + 
					 "VALUES (3, 'Li si', 18);";
		    stmt.executeUpdate(sql);
			stmt.close();
			c.close();
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ":" +e.getMessage());
			System.exit(0);
		}
		System.out.println("Records created successfully.");
	}
}

--------------------------------------------------------------

我们可以看到这里有两句插入语句，第一句ID的位置为null，第二句ID的位置为3，
这就要说回到AUTOINCREMENT，其实这个是自动增加的意思，就是如果所有插入的数据ID都是null，
那么它会按照1、2、3...的顺序依次排下去，同时也可以认为指定ID，比如我这里跳过了ID为2。

3.接下来是更新数据

------------------------------------------------------------------

package SQLite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

public class Update {
	public static void main(String[] args) {
		Connection c = null;
		Statement stmt = null;
		try {
			Class.forName("org.sqlite.JDBC");
			c = DriverManager.getConnection("jdbc:sqlite:Test.db");
			c.setAutoCommit(false);//
			System.out.println("Opened database successfully.");
			stmt = c.createStatement();
			String sql = "UPDATE ichamption set NAME = 'Wang wu' where ID = 1;";
			stmt.executeUpdate(sql);
			sql = "UPDATE ichamption set AGE = 6 where ID = 2;";
		    stmt.executeUpdate(sql);
			stmt.close();
			c.commit();//
			c.close();
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ":" +e.getMessage());
			System.exit(0);
		}
		System.out.println("Operation done successfully.");
	}
}

---------------------------------------------------------

可以看到，ID=2这一条记录不存在，所以没有变化，但是第一条记录的名字已经改过来了。

4.然后是删除数据

-------------------------------------------------------------------

package SQLite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

public class Delete {
	public static void main(String[] args) {
		Connection c = null;
		Statement stmt = null;
		try {
			Class.forName("org.sqlite.JDBC");
			c = DriverManager.getConnection("jdbc:sqlite:Test.db");
			c.setAutoCommit(false);//
			System.out.println("Opened database successfully.");
			
			stmt = c.createStatement();
			String sql = "DELETE from ichamption where ID = 1;";
			stmt.executeUpdate(sql);
			c.commit();//
			
			stmt.close();
			c.close();
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ":" +e.getMessage());
			System.exit(0);
		}
		System.out.println("Operation done successfully.");
	}
}

---------------------------------------------------------------

5.最后是查看，现在的数据只剩下ID=3，NAME=ichampion，AGE=18这一条了。

-----------------------------------------------------------------

package SQLite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class Select {
	public static void main(String[] args) {
		Connection c = null;
		Statement stmt = null;
		try {
			Class.forName("org.sqlite.JDBC");
			c = DriverManager.getConnection("jdbc:sqlite:Test.db");
			c.setAutoCommit(false);//
			System.out.println("Opened database successfully.");
			
			stmt = c.createStatement();
			ResultSet  rs = stmt.executeQuery("SELECT * FROM ichamption;");//
			while(rs.next()){
				int id = rs.getInt("id");
				String name = rs.getString("name");
				int age = rs.getInt("age");
				System.out.println("ID = " + id);
				System.out.println("NAME = " + name);
				System.out.println("AGE = " + age);
				System.out.println();
			}
			rs.close();//
			stmt.close();
			c.close();
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ":" +e.getMessage());
			System.exit(0);
		}
		System.out.println("Operation done successfully.");
	}
}

------------------------------------------------------------------------

